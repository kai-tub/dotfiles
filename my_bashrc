# shellcheck shell=bash
# should be loaded by bashrc

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

if [[ $(ps --no-header --pid=$PPID --format=cmd) != *"fish" ]]
then
    if command -v fish &> /dev/null; then
        exec fish
    fi
fi

function _update_ps1() {
    PS1="$(powerline-go -error $? -jobs $(jobs -p | wc -l))"
}

# TERM = "linux" should show minimalistic output
if [ "$TERM" != "linux" ]; then
    if command -v powerline-go &> /dev/null; then
        PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
    # starship has some issues on bash; and doesn't work on WSL. Rather use `powerline-go`
    elif command -v starship &> /dev/null && [[ "$(< /proc/version)" == *@(Microsoft|WSL)* ]]; then
        eval "$starship init bash"
    fi
fi

set -o vi

if command -v code &> /dev/null; then
    EDITOR=$(which code)
elif command -v vim &> /dev/null; then
    EDITOR=$(which vim)
elif command -v vi &> /dev/null; then
    EDITOR=$(which vi)
elif command -v nano &> /dev/null; then
    EDITOR=$(which nano)
else
    EDITOR=
fi

export EDITOR
export PIPX_BIN_DIR="$HOME/bin"

[[ ":$PATH:" != *":$HOME/bin/:"* ]] && PATH="$HOME/bin/:${PATH}"
